@using System.ComponentModel.DataAnnotations;
<EditForm @ref="form" Model="@model" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                Update task
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField Label="Title" @bind-Value="model.Title" For="@(() => model.Title)" />
            <MudTextField Label="Description" @bind-Value="model.Description" For="@(() => model.Description)" Lines="3" />
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit" Class="px-10">Update</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Cancel" Class="px-10">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public TaskModel? TaskToUpdate { get; set; }

    private EditForm form;
    private UpdateTaskForm model = new();

    protected override void OnParametersSet()
    {
        if (TaskToUpdate is null)
            return;

        model.Title = TaskToUpdate.Title;
        model.Description = TaskToUpdate.Description;
    }

    private void Submit(EditContext context)
    {
        if (context.Validate())
        {
            MudDialog.Close<UpdateTask>(new UpdateTask(TaskToUpdate?.Id ?? Guid.Empty, model.Title, model.Description, model.CategoryId == Guid.Empty ? null : model.CategoryId));
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    class UpdateTaskForm
    {
        [Required]
        public string Title { get; set; }
        public string? Description { get; set; }
        public Guid? CategoryId { get; set; }
    }
}
